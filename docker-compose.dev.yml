version: '3.8'

services:
  api:
    build: .
    container_name: gin-api-dev
    ports:
      - "8080:8080"
    environment:
      - PORT=8080
      - GIN_MODE=debug
      - DB_TYPE=postgres
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=api_user
      - DB_PASSWORD=api_password
      - DB_NAME=api
      - DB_SSLMODE=disable
      - JWT_SECRET=tu_secreto_jwt_super_seguro_aqui
      - JWT_EXPIRATION=24h
      - CORS_ALLOW_ORIGINS=*
      - CORS_ALLOW_METHODS=GET,POST,PUT,PATCH,DELETE,HEAD,OPTIONS
      - CORS_ALLOW_HEADERS=Origin,Content-Length,Content-Type,Authorization
    volumes:
      - ./logs:/app/logs
    depends_on:
      - postgres
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - api-network

  postgres:
    image: postgres:15-alpine
    container_name: api-postgres-dev
    environment:
      POSTGRES_DB: api
      POSTGRES_USER: api_user
      POSTGRES_PASSWORD: api_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - api-network
    restart: unless-stopped

networks:
  api-network:
    driver: bridge

volumes:
  postgres_data: 